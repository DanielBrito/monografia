% Endereço das bibliotecas Python e do Blender:

@online{pyparsing,
    author = {Paul{ }McGuire},
    title = {PyParsing - A Python Parsing Module},
    year = 2015,
    url = {https://github.com/pyparsing/pyparsing},
    urlaccessdate = {24 out. 2020},
    note={Python library for creating parsing expression grammar}
}

@online{blender,
    author = {Blender{ }Foundation},
    title = {Blender},
    year = 2020,
    url = {https://www.blender.org},
    urlaccessdate = {24 out. 2020},
    note={Free and Open 3D Creation Software}
}

@online{bmesh,
    author = {Blender{ }Foundation},
    title = {BMesh Module (bmesh)},
    year = 2020,
    url = {https://docs.blender.org/api/current/bmesh.html},
    urlaccessdate = {24 out. 2020},
    note={Blender API for internal mesh editing}
}

@online{bpy,
    author = {Blender{ }Foundation},
    title = {Blender Python API Documentation},
    year = 2020,
    url = {https://docs.blender.org/api/current/index.html},
    urlaccessdate = {24 out. 2020},
    note={Python API for Blender}
}

% Metadados das imagens da internet:

@misc{renee,
author = {Renee Veldman-Tentori},
title = {Neuschwanstein Castle},
year = {2003},
url = {https://www.freeimages.com/photo/neuschwanstein-castle-1565577},
date = {24 ago. 2003},
OPTsubtitle = {•},
OPTtitleaddon = {•},
OPTlanguage = {•},
OPTversion = {•},
OPTorganization = {•},
OPTmonth = {•},
OPTaddendum = {•},
urlaccessdate = {19 out. 2020}
}

@misc{susan,
author = {Susan Maxwell},
title = {Capitol Dome},
year = {2008},
url = {https://www.freeimages.com/photo/capitol-dome-1207905},
date = {26 out. 2008},
OPTsubtitle = {•},
OPTtitleaddon = {•},
OPTlanguage = {•},
OPTversion = {•},
OPTorganization = {•},
OPTmonth = {•},
OPTaddendum = {•},
urlaccessdate = {19 out. 2020}
}

% Dados bibliográficos organizados por ordem cronológica (crescente):

@article{lindenmayer1968,
title = "Mathematical models for cellular interactions in development",
journal = "Journal of Theoretical Biology",
volume = "18",
number = "3",
pages = "300 - 315",
year = "1968",
issn = "0022-5193",
doi = "https://doi.org/10.1016/0022-5193(68)90080-5",
url = "http://www.sciencedirect.com/science/article/pii/0022519368900805",
author = "Aristid Lindenmayer",
abstract = "Continuing the presentation of a theory of growth models for filamentous organisms, the treatment is extended to cases where inputs are received by each cell from both directions along the filament, and the change of state and the output of a cell is determined by its present state and the two inputs it receives. Further symbolism is introduced to take care of branching filaments as well. Two entirely different models are constructed for a particular branching organism, resembling one of the red algae. These models are compared with reference to the number of states employed, and the presence or absence of instructions for unequal divisions and for inductive relationships among the cells. The importance of a morphogenetic control theory concerning these relationships is emphasized."
}

@inproceedings{stiny1972,
author = {Stiny, George and Gips, James},
year = {1971},
month = {01},
pages = {1460-1465},
title = {‘Shape Grammars and the Generative Specification of Painting and Sculpture’},
volume = {71},
journal = {IFIP Congress},
url = {http://www.cs.bc.edu/~gips/ShapeGrammarsIFIPS71.pdf},
}

@inproceedings{sedeberg1986,
author = {Sederberg, Thomas W. and Parry, Scott R.},
title = {Free-Form Deformation of Solid Geometric Models},
year = {1986},
isbn = {0897911962},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/15922.15903},
doi = {10.1145/15922.15903},
abstract = {A technique is presented for deforming solid geometric models in a free-form manner. The technique can be used with any solid modeling system, such as CSG or B-rep. It can deform surface primitives of any type or degree: planes, quadrics, parametric surface patches, or implicitly defined surfaces, for example. The deformation can be applied either globally or locally. Local deformations can be imposed with any desired degree of derivative continuity. It is also possible to deform a solid model in such a way that its volume is preserved.The scheme is based on trivariate Bernstein polynomials, and provides the designer with an intuitive appreciation for its effects.},
booktitle = {Proceedings of the 13th Annual Conference on Computer Graphics and Interactive Techniques},
pages = {151–160},
numpages = {10},
series = {SIGGRAPH '86}
}

@Inbook{truesdell1992,
author="Truesdell, C.
and Noll, W.",
title="The Non-Linear Field Theories of Mechanics",
bookTitle="The Non-Linear Field Theories of Mechanics",
year="1992",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="1--579",
abstract="1. Purpose of the non-linear theories. Matter is commonly found in the form of materials. Analytical mechanics turned its back upon this fact, creating the centrally useful but abstract concepts of the mass point and the rigid body, in which matter manifests itself only through its inertia, independent of its constitution; ``modern'' physics likewise turns its back, since it concerns solely the small particles of matter, declining to face the problem of how a specimen made up of such particles will behave in the typical circumstances in which we meet it. Materials, however, continue to furnish the masses of matter we see and use from day to day: air, water, earth, flesh, wood, stone, steel, concrete, glass, rubber, ... All are deformable. A theory aiming to describe their mechanical behavior must take heed of their deformability and represent the definite principles it obeys.",
isbn="978-3-662-13183-1",
doi="10.1007/978-3-662-13183-1_1",
url="https://doi.org/10.1007/978-3-662-13183-1_1"
}

@book{knight1995,
author = {Terry Weissman Knight},
title = {Transformations in Design: A Formal Approach to Stylistic Change and Innovation in the Visual Arts},
year = {1995},
isbn = {0521384605},
publisher = {Cambridge University Press},
address = {USA},
abstract = {From the Publisher:Style and stylistic change are central issues in the study of art and architecture. Over the past hundred years various important theories of style and its changes have been proposed by scholars in a diversity of disciplines. In this book, a new and innovative approach is developed that looks not only at traditional questions about stylistic change but also sets up a formal mathematical model through which to analyze change and structure innovation. Although much of the book is precise, no technical or mathematical background is assumed on the part of the reader.},
url = {https://dl.acm.org/doi/book/10.5555/572943}
}

@book{lindenmayer1996,
author = {Prusinkiewicz, Przemyslaw and Lindenmayer, Aristid},
title = {The Algorithmic Beauty of Plants},
year = {1996},
isbn = {0387946764},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url= {https://dl.acm.org/doi/book/10.5555/235579}
}

@article{jin2000,
author = {Jin, Xiaogang and Li, Y. F.},
title = {Three-Dimensional Deformation Using Directional Polar Coordinates},
year = {2000},
issue_date = {Dec. 2000},
publisher = {A. K. Peters, Ltd.},
address = {USA},
volume = {5},
number = {2},
issn = {1086-7651},
url = {https://doi.org/10.1080/10867651.2000.10487521},
doi = {10.1080/10867651.2000.10487521},
journal = {J. Graph. Tools},
month = feb,
pages = {15–24},
numpages = {10}
}

@book{ebert2002,
author = {Ebert, David S. and Musgrave, F. Kenton and Peachey, Darwyn and Perlin, Ken and Worley, Steven},
title = {Texturing and Modeling: A Procedural Approach},
year = {2002},
isbn = {1558608486},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
edition = {3rd},
abstract = {From the Publisher:This the classic text/tutorial/reference introducing and defining the procedural approach to texturing and modeling and computer graphics in general. This Second Edition is completely revised and updated to the current computer graphics marketplace. It contains a toolbox of procedures upon which programmers can build a library of textures and objects, and includes extensive explanations of how these functions work and how to design new functions. New chapters include: Cellular Texture Generation, Volumetric Cloud Modeling with Implicit Functions, Interacting with Virtual Actors, and Rendering with Adaptive Level of Detail.},
url = {https://dl.acm.org/doi/book/10.5555/572337}
}

@inproceedings{wonka2003,
author = {Wonka, Peter and Wimmer, Michael and Sillion, Fran\c{c}ois and Ribarsky, William},
title = {Instant Architecture},
year = {2003},
isbn = {1581137095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1201775.882324},
doi = {10.1145/1201775.882324},
abstract = {This paper presents a new method for the automatic modeling of architecture. Building designs are derived using split grammars, a new type of parametric set grammar based on the concept of shape. The paper also introduces an attribute matching system and a separate control grammar, which offer the flexibility required to model buildings using a large variety of different styles and design ideas. Through the adaptive nature of the design grammar used, the created building designs can either be generic or adhere closely to a specified goal, depending on the amount of data available.},
booktitle = {ACM SIGGRAPH 2003 Papers},
pages = {669–677},
numpages = {9},
keywords = {architecture, modeling, grammars, building design},
location = {San Diego, California},
series = {SIGGRAPH '03}
}

@article{muller2006,
author = {M\"{u}ller, Pascal and Wonka, Peter and Haegler, Simon and Ulmer, Andreas and Van Gool, Luc},
title = {Procedural Modeling of Buildings},
year = {2006},
issue_date = {July 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {25},
number = {3},
issn = {0730-0301},
url = {https://doi.org/10.1145/1141911.1141931},
doi = {10.1145/1141911.1141931},
abstract = {CGA shape, a novel shape grammar for the procedural modeling of CG architecture, produces building shells with high visual quality and geometric detail. It produces extensive architectural models for computer games and movies, at low cost. Context sensitive shape rules allow the user to specify interactions between the entities of the hierarchical shape descriptions. Selected examples demonstrate solutions to previously unsolved modeling problems, especially to consistent mass modeling with volumetric shapes of arbitrary orientation. CGA shape is shown to efficiently generate massive urban models with unprecedented level of detail, with the virtual rebuilding of the archaeological site of Pompeii as a case in point.},
journal = {ACM Trans. Graph.},
month = jul,
pages = {614–623},
numpages = {10},
keywords = {architecture, Chomsky grammars, procedural modeling, computer-aided design, L-systems}
}

@article{krekclau2010,
author = {Krecklau, L. and Pavic, D. and Kobbelt, L.},
title = {Generalized Use of Non-Terminal Symbols for Procedural Modeling},
journal = {Computer Graphics Forum},
volume = {29},
number = {8},
pages = {2291-2303},
keywords = {procedural modeling, L-Systems, formal grammars, architecture, plants, I.3.6 Computer Graphics: Languages—I.3.5 Computer Graphics: Computational Geometry and Object Modeling—I.3.7 Computer Graphics: Three-Dimensional Graphics and Realism},
doi = {10.1111/j.1467-8659.2010.01714.x},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01714.x},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2010.01714.x},
abstract = {Abstract We present the new procedural modeling language  (Generalized Grammar), which adapts various concepts from general purpose programming languages to provide high descriptive power with well-defined semantics and a simple syntax which is easily readable even by non-programmers. The term ‘Generalized’ reflects two kinds of generalization. On the one hand, we extend the scope of previous architectural modeling languages by allowing for multiple types of non-terminal objects with domain-specific operators and attributes. On the other hand, the language accepts non-terminal symbols as parameters in modeling rules and thus enables the definition of abstract structure templates for flexible re-use within the grammar. By deriving  from the well-established programming language Python, we can make sure that our modeling language has a well-defined semantics. For illustration, we apply  to architectural as well as plant modeling to demonstrate its descriptive power with some complex examples.},
year = {2010}
}

@article{smelik2010,
title = "A declarative approach to procedural modeling of virtual worlds",
journal = "Computers \& Graphics",
volume = "35",
number = "2",
pages = "352 - 363",
year = "2011",
note = "Virtual Reality in Brazil Visual Computing in Biology and Medicine Semantic 3D media and content Cultural Heritage",
issn = "0097-8493",
doi = "https://doi.org/10.1016/j.cag.2010.11.011",
url = "http://www.sciencedirect.com/science/article/pii/S0097849310001809",
author = "R.M. Smelik and T. Tutenel and K.J. {de Kraker} and R. Bidarra",
keywords = "Virtual worlds, Declarative modeling, Semantic modeling, Consistency maintenance, Procedural methods, Procedural sketching",
abstract = "With the ever increasing costs of manual content creation for virtual worlds, the potential of creating it automatically becomes too attractive to ignore. However, for most designers, traditional procedural content generation methods are complex and unintuitive to use, hard to control, and generated results are not easily integrated into a complete and consistent virtual world. We introduce a novel declarative modeling approach that enables designers to concentrate on stating what they want to create instead of on describing how they should model it. It aims at reducing the complexity of virtual world modeling by combining the strengths of semantics-based modeling with manual and procedural approaches. This article describes two of its main contributions to procedural modeling of virtual worlds: interactive procedural sketching and virtual world consistency maintenance. We discuss how these techniques, integrated in our modeling framework SketchaWorld, build up to enable designers to create a complete 3D virtual world in minutes. Procedural sketching provides a fast and more intuitive way to model virtual worlds, by letting designers interactively sketch their virtual world using high-level terrain features, which are then procedurally expanded using a variety of integrated procedural methods. Consistency maintenance guarantees that the semantics of all terrain features is preserved throughout the modeling process. In particular, it automatically solves conflicts possibly emerging from interactions between terrain features. We believe that these contributions together represent a significant step towards providing more user control and flexibility in procedural modeling of virtual worlds. It can therefore be expected that by further reducing its complexity, virtual world modeling will become accessible to an increasingly broad group of users."
}

@phdthesis{teboul2011,
  TITLE = {{Shape grammar parsing : application to image-based modeling}},
  AUTHOR = {Teboul, Olivier},
  URL = {https://tel.archives-ouvertes.fr/tel-00628906},
  NUMBER = {2011ECAP0024},
  SCHOOL = {{Ecole Centrale Paris}},
  YEAR = {2011},
  MONTH = Jun,
  KEYWORDS = {Computer Graphics ; Image Parsing ; Computer Vision ; Vision par ordinateur ; Analyse d'images ; Informatique graphique},
  TYPE = {Theses},
  PDF = {https://tel.archives-ouvertes.fr/tel-00628906/file/thesis_teboul.pdf},
  HAL_ID = {tel-00628906},
  HAL_VERSION = {v1},
}

@inproceedings{leblanc2011,
author = {Leblanc, Luc and Houle, Jocelyn and Poulin, Pierre},
title = {Component-Based Modeling of Complete Buildings},
year = {2011},
isbn = {9781450306935},
publisher = {Canadian Human-Computer Communications Society},
address = {Waterloo, CAN},
abstract = {We present a system to procedurally generate complex models with interdependent elements. Our system relies on the concept of components to spatially and semantically define various elements. Through a series of successive statements executed on a subset of components selected with queries, we grow a tree of components ultimately defining a model.We apply our concept and representation of components to the generation of complete buildings, with coherent interior and exterior. It proves general and well adapted to support subdivision of volumes, insertion of openings, embedding of staircases, decoration of fa\c{c}ades and walls, layout of furniture, and various other operations required when constructing a complete building.},
booktitle = {Proceedings of Graphics Interface 2011},
pages = {87–94},
numpages = {8},
keywords = {shape grammar, procedural modeling, architecture, Boolean operation},
location = {St. John's, Newfoundland, Canada},
series = {GI '11},
url = {https://dl.acm.org/doi/10.5555/1992917.1992932}
}

@article{fellner2013,
title = "Shape grammars on convex polyhedra",
journal = "Computers \& Graphics",
volume = "37",
number = "6",
pages = "707 - 717",
year = "2013",
note = "Shape Modeling International (SMI) Conference 2013",
issn = "0097-8493",
doi = "https://doi.org/10.1016/j.cag.2013.05.012",
url = "http://www.sciencedirect.com/science/article/pii/S0097849313000861",
author = "Wolfgang Thaller and Ulrich Krispel and René Zmugg and Sven Havemann and Dieter W. Fellner",
keywords = "Procedural modeling, Shape grammars, Convex polyhedra",
abstract = "Shape grammars are the method of choice for procedural modeling of architecture. State of the art shape grammar systems define a bounding box for each shape; various operations can then be applied based on this bounding box. Most notably, the box can be split into smaller boxes along any of its three axes. We argue that a greater variety can be obtained by using convex polyhedra as bounding volumes instead. Split operations on convex polyhedra are no longer limited to the three principal axes but can use arbitrary planes. Such splits permit a volumetric decomposition into convex elements; As convex polyhedra can represent many shapes more faithfully than boxes, shape grammar rules can adapt to a much wider array of different contexts. We generalize established shape operations and introduce new operations that now become possible."
}

@article{zmugg2014,
author = {Zmugg, René and Thaller, Wolfgang and Krispel, Ulrich and Edelsbrunner, Johannes and Havemann, Sven and Fellner, Dieter},
year = {2014},
month = {09},
pages = {1009-1019},
title = {Procedural Architecture Using Deformation-aware Split Grammars},
volume = {30},
journal = {Vis. Comput.},
doi = {10.1007/s00371-013-0912-3},
url = {https://link.springer.com/article/10.1007/s00371-013-0912-3}
}

@article{smelik2014,
author = {Smelik, Ruben M. and Tutenel, Tim and Bidarra, Rafael and Benes, Bedrich},
title = {A Survey on Procedural Modeling for Virtual Worlds},
year = {2014},
issue_date = {September 2014},
publisher = {The Eurographs Association \& John Wiley \& Sons, Ltd.},
address = {Chichester, GBR},
volume = {33},
number = {6},
issn = {0167-7055},
url = {https://doi.org/10.1111/cgf.12276},
doi = {10.1111/cgf.12276},
abstract = {Procedural modeling deals with semi-automatic content generation by means of a program or procedure. Among other advantages, its data compression and the potential to generate a large variety of detailed content with reduced human intervention, have made procedural modelling attractive for creating virtual environments increasingly used in movies, games and simulations. We survey procedural methods that are useful to generate features of virtual worlds, including terrains, vegetation, rivers, roads, buildings and entire cities. In this survey, we focus particularly on the degree of intuitive control and of interactivity offered by each procedural method, because these properties are instrumental for their typical users: designers and artists. We identify the most promising research results that have been recently achieved, but we also realize that there is far from widespread acceptance of procedural methods among non-technical, creative professionals. We conclude by discussing some of the most important challenges of procedural modelling.},
journal = {Comput. Graph. Forum},
month = sep,
pages = {31–50},
numpages = {20},
keywords = {virtual worlds, languages, procedural modeling methods, procedural content generation, systems, Computer Graphics [I3.5]: Computational Geometry and Object Modelling-Geometric algorithms}
}

@MASTERSTHESIS{francisco2014,
author = {Francisco Caio Maia Rodrigues},
TITLE = {Evolução de split grammars para construções procedurais},
SCHOOL = {Universidade Federal do Ceará},
YEAR = {2014},
numpages = {51},
address = {Fortaleza},
type = {Mestrado em Ciência da Computação},
url = {http://www.repositorio.ufc.br/handle/riufc/21500}
}

@inproceedings{musse2015,
author = {Silveira, Ivan and Camozzato, Daniel and Marson, Fernando and Dihl, Leandro and Musse, Soraia},
year = {2015},
month = {11},
pages = {89-98},
title = {Real-Time Procedural Generation of Personalized Facade and Interior Appearances Based on Semantics},
doi = {10.1109/SBGames.2015.32},
url = {https://ieeexplore.ieee.org/document/7785845}
}

@article{simon2011,
author = {Simon, Lo\"{i}c},
year = {2011},
month = {07},
pages = {},
title = {Procedural reconstruction of buildings : towards large scale automatic 3D modeling of urban environments},
url = {https://tel.archives-ouvertes.fr/tel-00637638}
}

@article{schwarz2015,
author = {Schwarz, Michael and M\"{u}ller, Pascal},
title = {Advanced Procedural Modeling of Architecture},
year = {2015},
issue_date = {August 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {4},
issn = {0730-0301},
url = {https://doi.org/10.1145/2766956},
doi = {10.1145/2766956},
abstract = {We present the novel grammar language CGA++ for the procedural modeling of architecture. While existing grammar-based approaches can produce stunning results, they are limited in what modeling scenarios can be realized. In particular, many context-sensitive tasks are precluded, not least because within the rules specifying how one shape is refined, the necessary knowledge about other shapes is not available. Transcending such limitations, CGA++ significantly raises the expressiveness and offers a generic and integrated solution for many advanced procedural modeling problems. Pivotally, CGA++ grants first-class citizenship to shapes, enabling, within a grammar, directly accessing shapes and shape trees, operations on multiple shapes, rewriting shape (sub)trees, and spawning new trees (e.g., to explore multiple alternatives). The new linguistic device of events allows coordination across multiple shapes, featuring powerful dynamic grouping and synchronization. Various examples illustrate CGA++, demonstrating solutions to previously infeasible modeling challenges.},
journal = {ACM Trans. Graph.},
month = jul,
articleno = {107},
numpages = {12},
keywords = {grammar language, procedural modeling}
}

@article{haubenwallner2016,
title={Procedural Generation using Grammar based Modeling and Genetic Algorithms},
author={Karl Haubenwallner},
year={2016},
publisher={Graz University of Technology - Institute of Computer Graphics},
address={Austria},
url = {https://old.cescg.org/CESCG-2016/papers/Haubenwallner-Procedural_Generation_using_Grammar_based_Modelling_and_Genetic_Algorithms.pdf}
}

@article{vimont2017,
author = {Vimont, Ulysse and Rohmer, Damien and Begault, Antoine and Cani, Marie-Paule},
title = {Deformation Grammars: Hierarchical Constraint Preservation Under Deformation},
journal = {Computer Graphics Forum},
volume = {36},
number = {8},
pages = {429-443},
keywords = {deformations, geometric modelling, I.3.5 Computer Graphics: Computational Geometry and Object Modelling, Hierarchy and geometric transformations},
doi = {10.1111/cgf.13090},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13090},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.13090},
abstract = {Abstract Deformation grammars are a novel procedural framework enabling to sculpt hierarchical 3D models in an object-dependent manner. They process object deformations as symbols thanks to user-defined interpretation rules. We use them to define hierarchical deformation behaviours tailored for each model, and enabling any sculpting gesture to be interpreted as some adapted constraint-preserving deformation. A variety of object-specific constraints can be enforced using this framework, such as maintaining distributions of subparts, avoiding self-penetrations or meeting semantic-based user-defined rules. The operations used to maintain constraints are kept transparent to the user, enabling them to focus on their design. We demonstrate the feasibility and the versatility of this approach on a variety of examples, implemented within an interactive sculpting system.},
year = {2017}
}

@article{jana2017,
author = {Procházková, Jana},
year = {2017},
month = {02},
pages = {},
title = {FREE FORM DEFORMATION METHODS – THE THEORY AND PRACTICE},
url = {https://www.researchgate.net/publication/314261522_free_form_deformation_methods_-_the_theory_and_practice}
}

@article{edelsbrunner2017,
title = "Procedural modeling of architecture with round geometry",
journal = "Computers \& Graphics",
volume = "64",
pages = "14 - 25",
year = "2017",
note = "Cyberworlds 2016",
issn = "0097-8493",
doi = "https://doi.org/10.1016/j.cag.2017.01.004",
url = "http://www.sciencedirect.com/science/article/pii/S0097849317300134",
author = "Johannes Edelsbrunner and Sven Havemann and Alexei Sourin and Dieter W. Fellner",
keywords = "3D-modeling, Procedural modeling, Architectural models",
abstract = "Creation of procedural 3D building models can significantly reduce the costs of modeling, since it allows for generating a variety of similar shapes from one procedural description. The common field of application for procedural modeling is modeling of straight building facades, which are very well suited for shape grammars—a special kind of procedural modeling system. In order to generate round building geometry, we present a way to set up different coordinate systems in shape grammars. Besides Cartesian, these are primarily cylindrical and spherical coordinate systems for generation of structures such as towers or domes, that can procedurally adapt to different dimensions and parameters. The users can apply common splitting idioms from shape grammars in their familiar way for creating round instead of straight geometry. The second enhancement we propose is to provide a way for users to give high level inputs that are used to automatically arrange and adapt parts of the models."
}

@article{wonka2018,
author={H. {Jiang} and D. {Yan} and X. {Zhang} and P. {Wonka}},
journal={IEEE Transactions on Visualization and Computer Graphics}, 
title={Selection Expressions for Procedural Modeling}, 
year={2018},
volume={26},
number={4},
pages={1775-1788},
doi={10.1109/TVCG.2018.2877614},
url = {https://ieeexplore.ieee.org/document/8502874}
}

@article{nishida2018,
TITLE = {{Procedural Modeling of a Building from a Single Image}},
AUTHOR = {Nishida, Gen and Bousseau, Adrien and Aliaga, Daniel G.},
URL = {https://hal.inria.fr/hal-01810207},
JOURNAL = {{Computer Graphics Forum}},
PUBLISHER = {{Wiley}},
SERIES = {Eurographics},
VOLUME = {37},
NUMBER = {2},
YEAR = {2018},
DOI = {10.1111/cgf.13372},
PDF = {https://hal.inria.fr/hal-01810207/file/photo2building.pdf},
HAL_ID = {hal-01810207},
HAL_VERSION = {v1},
}

@Inbook{gu2018,
author="Gu, Ning and Behbahani, Peiman Amini",
editor="Sriraman, Bharath",
title="Shape Grammars: A Key Generative Design Algorithm",
bookTitle="Handbook of the Mathematics of the Arts and Sciences",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="1--21",
abstract="Shape grammars are one of the main generative design algorithms. The theories and practices of shape grammars have developed and evolved for over four decades and showed significant impact on design computation and contemporary architecture. The formal computational approach to generative design as specified in shape grammars, and the novel descriptions and applications of shapes and shape rules for representing and composing a design, has become the foundation and inspiration for many contemporary computational design methods and tools, especially parametric design, which is a current leading computational design method. This chapter gives an overview of the historical developments and applications of shape grammars. The algorithm is introduced by highlighting the background, key components, and procedures for design generation, methods, and issues for authoring shape grammars, shape grammar evolution and extension, purposes of shape grammar application, as well as implementation of shape grammars. The characteristics of shape grammars are presented and discussed by comparing them to other key generative design algorithms, some of which have been applied in conjunction with shape grammars. This chapter shows that shape grammars have significant potentials in design generation, analysis, and optimization, as seen in many of the grammar studies. The future directions should focus on further research, improved pedagogy, as well as validation in design practice, to further advance the field.",
isbn="978-3-319-70658-0",
doi="10.1007/978-3-319-70658-0_7-1",
url="https://doi.org/10.1007/978-3-319-70658-0_7-1"
}